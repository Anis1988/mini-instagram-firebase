{"version":3,"sources":["firebase.js","Post.js","ImageUpload.js","App.js","serviceWorker.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","storage","Post","user","postId","imageUrl","username","caption","useState","comments","setComments","comment","setComment","useEffect","unsbscribe","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","className","Avatar","alt","src","text","type","placeholder","value","onChange","e","target","disabled","onClick","preventDefault","add","displayName","timestamp","FieldValue","serverTimestamp","ImageUpload","image","setImage","progress","setProgress","setCaption","max","event","files","Button","ref","name","put","on","Math","round","bytesTransferred","totalBytes","error","console","log","alert","message","child","getDownloadURL","then","url","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","App","classes","modalStyle","posts","setPosts","open","setOpen","setUsername","email","setEmail","password","setPassword","setUser","openSigniIn","setOpenSigniIn","unsubscribe","onAuthStateChanged","authUser","id","post","Modal","onClose","style","Input","createUserWithEmailAndPassword","updateProfile","catch","signInWithEmailAndPassword","err","signOut","key","maxWidth","hideCaption","containerTagName","protocol","injectScript","onLoading","onSuccess","onAfterRender","onFailure","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8bc4e31a.chunk.js","sourcesContent":["import firebase from \"firebase\";\nconst firebaseApp = firebase.initializeApp({\n  apiKey: \"AIzaSyAmAiFUUlhaa1bgDWZPDq2Fkt0ssuBrWJo\",\n  authDomain: \"instagram-clone-339a7.firebaseapp.com\",\n  databaseURL: \"https://instagram-clone-339a7.firebaseio.com\",\n  projectId: \"instagram-clone-339a7\",\n  storageBucket: \"instagram-clone-339a7.appspot.com\",\n  messagingSenderId: \"894697476973\",\n  appId: \"1:894697476973:web:9ffc03a34596f506dd8064\",\n  measurementId: \"G-Q0RKN5ZP86\",\n});\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\nconst storage = firebase.storage();\n\nexport { db, auth, storage };\n","import React, { useState, useEffect } from \"react\";\nimport \"./Post.css\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { db } from \"./firebase\";\nimport firebase from \"firebase\";\n\nexport default function Post({ user, postId, imageUrl, username, caption }) {\n  const [comments, setComments] = useState([]);\n  const [comment, setComment] = useState(\"\");\n\n  useEffect(() => {\n    let unsbscribe;\n    if (postId) {\n      unsbscribe = db\n        .collection(\"posts\")\n        .doc(postId)\n        .collection(\"comments\")\n        .orderBy(\"timestamp\", \"desc\")\n        .onSnapshot((snapshot) => {\n          setComments(snapshot.docs.map((doc) => doc.data()));\n        });\n    }\n    return () => {\n      unsbscribe();\n    };\n  }, [postId]);\n  const postComment = (e) => {\n    e.preventDefault();\n    db.collection(\"posts\").doc(postId).collection(\"comments\").add({\n      text: comment,\n      username: user.displayName,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n    });\n    setComment(\"\");\n  };\n  return (\n    <div className=\"post\">\n      <div className=\"post__header\">\n        <Avatar className=\"post__avatar\" alt=\"Anis\" src=\"\" />\n        <h3>{username}</h3>\n      </div>\n      <img className=\"post__image\" src={imageUrl} alt=\"\" />\n      <h4 className=\"post__text\">\n        <strong>{username}</strong> {caption}\n      </h4>\n      <div className=\"post__comments\">\n        {comments.map((comment) => (\n          <p>\n            <strong>{comment.username}</strong> {comment.text}\n          </p>\n        ))}\n      </div>\n\n      {user && (\n        <form className=\"post__commentBox\">\n          <input\n            type=\"text\"\n            className=\"post__input\"\n            placeholder=\"Add a comment\"\n            value={comment}\n            onChange={(e) => setComment(e.target.value)}\n          />\n          <button\n            className=\"post__button\"\n            disabled={!comment}\n            type=\"submit\"\n            onClick={postComment}\n          >\n            Post\n          </button>\n        </form>\n      )}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { storage, db } from \"./firebase\";\nimport firebase from \"firebase\";\nimport \"./imageUpload.css\";\n\nexport default function ImageUpload({ username }) {\n  const [image, setImage] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [caption, setCaption] = useState(\"\");\n\n  const handleChange = (e) => {\n    if (e.target.files[0]) {\n      setImage(e.target.files[0]);\n    }\n  };\n\n  // Handle the Upload Button\n  const handleUpload = () => {\n    const uploadTask = storage.ref(`images/${image.name}`).put(image);\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        // we are visualizing the progress\n        const progress = Math.round(\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n        );\n        setProgress(progress);\n      },\n      // get the error\n      (error) => {\n        console.log(error);\n        alert(error.message);\n      },\n      () => {\n        // store it in the database\n        storage\n          .ref(\"images\")\n          .child(image.name)\n          .getDownloadURL()\n          .then((url) => {\n            db.collection(\"posts\").add({\n              timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n              caption: caption,\n              imageUrl: url,\n              username: username,\n            });\n            setProgress(0);\n            setCaption(\"\");\n            setImage(null);\n          });\n      }\n    );\n  };\n  return (\n    <div className=\"imageUpload\">\n      <progress className=\"imageUpload__progress\" value={progress} max=\"100\" />\n      <input\n        className=\"input-image\"\n        type=\"text\"\n        placeholder=\"Enter a caption\"\n        value={caption}\n        onChange={(event) => setCaption(event.target.value)}\n      />\n      <input className=\"upload-btn\" type=\"file\" onChange={handleChange} />\n      <Button onClick={handleUpload}>Upload</Button>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Post from \"./Post\";\nimport { db, auth } from \"./firebase\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Input } from \"@material-ui/core\";\nimport ImageUpload from \"./ImageUpload\";\nimport InstagramEmbed from \"react-instagram-embed\";\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\n//----------------------------------------------------//\n\nfunction App() {\n  const classes = useStyles();\n  const [modalStyle] = useState(getModalStyle);\n  const [posts, setPosts] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState(null);\n  const [openSigniIn, setOpenSigniIn] = useState(false);\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((authUser) => {\n      if (authUser) {\n        setUser(authUser);\n      } else {\n        setUser(null);\n      }\n    });\n    return () => {\n      unsubscribe();\n    };\n  }, [user, username]);\n  useEffect(() => {\n    db.collection(\"posts\")\n      .orderBy(\"timestamp\", \"desc\")\n      .onSnapshot((snapshot) => {\n        setPosts(\n          snapshot.docs.map((doc) => ({\n            id: doc.id,\n            post: doc.data(),\n          }))\n        );\n      });\n  }, []);\n  // Sign Up\n  const signUp = (event) => {\n    event.preventDefault();\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((authUser) => {\n        return authUser.user.updateProfile({ displayName: username });\n      })\n      .catch((error) => alert(error.message));\n    setOpen(false);\n  };\n  //Sign In\n  const signIn = (e) => {\n    e.preventDefault();\n    auth\n      .signInWithEmailAndPassword(email, password)\n      .catch((err) => alert(err.message));\n    setOpenSigniIn(false);\n  };\n\n  return (\n    <div className=\"app\">\n      <Modal open={open} onClose={() => setOpen(false)}>\n        <div style={modalStyle} className={classes.paper}>\n          <center>\n            <form className=\"app__signup\">\n              <img\n                src=\"https://lh3.googleusercontent.com/LZdsQGEbRqcZIjvWdiJTjlaGQJQjP097FAIvl4XfOi_XHagmC83Lc04PDxaq8Ml6xJk\"\n                alt=\"\"\n                className=\"app__headerImage\"\n              />\n              <Input\n                placeholder=\"username\"\n                type=\"text\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n              />\n              <Input\n                placeholder=\"email\"\n                type=\"text\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n              <Input\n                placeholder=\"password\"\n                type=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n              <Button type=\"submit\" onClick={signUp}>\n                Sign Up\n              </Button>\n            </form>\n          </center>\n        </div>\n      </Modal>\n\n      <Modal open={openSigniIn} onClose={() => setOpenSigniIn(false)}>\n        <div style={modalStyle} className={classes.paper}>\n          <center>\n            <form className=\"app__signup\">\n              <img\n                src=\"https://lh3.googleusercontent.com/LZdsQGEbRqcZIjvWdiJTjlaGQJQjP097FAIvl4XfOi_XHagmC83Lc04PDxaq8Ml6xJk\"\n                alt=\"\"\n                className=\"app__headerImage\"\n              />\n              <Input\n                placeholder=\"email\"\n                type=\"text\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n              <Input\n                placeholder=\"password\"\n                type=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n              <Button type=\"submit\" onClick={signIn}>\n                Sign In\n              </Button>\n            </form>\n          </center>\n        </div>\n      </Modal>\n\n      <div className=\"app__header\">\n        <img\n          src=\"https://lh3.googleusercontent.com/LZdsQGEbRqcZIjvWdiJTjlaGQJQjP097FAIvl4XfOi_XHagmC83Lc04PDxaq8Ml6xJk\"\n          alt=\"\"\n          className=\"app__headerImage\"\n        />\n        {user ? (\n          <Button onClick={() => auth.signOut()}>Log Out</Button>\n        ) : (\n          <div className=\"login__Container\">\n            <Button onClick={() => setOpenSigniIn(true)}>Sign In</Button>\n            <Button onClick={() => setOpen(true)}>Sign Up</Button>\n          </div>\n        )}\n      </div>\n      <div className=\"app__posts\">\n        <div className=\"app__postsLeft\">\n          {posts.map(({ id, post }) => {\n            return (\n              <Post\n                key={id}\n                postId={id}\n                username={post.username}\n                caption={post.caption}\n                imageUrl={post.imageUrl}\n                user={user}\n              />\n            );\n          })}\n        </div>\n        <div className=\"app__postsRight\">\n          <InstagramEmbed\n            url=\"https://instagr.am/p/Zw9o4/\"\n            maxWidth={320}\n            hideCaption={false}\n            containerTagName=\"div\"\n            protocol=\"\"\n            injectScript\n            onLoading={() => {}}\n            onSuccess={() => {}}\n            onAfterRender={() => {}}\n            onFailure={() => {}}\n          />\n        </div>\n      </div>\n      {user?.displayName ? (\n        <ImageUpload username={user.displayName} />\n      ) : (\n        <h3>Sorry, you need to Login to Upload</h3>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}