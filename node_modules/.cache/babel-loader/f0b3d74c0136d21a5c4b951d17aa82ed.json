{"ast":null,"code":"var _jsxFileName = \"/Users/anismedini/Desktop/code-js/instagram-clone/src/Post.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./Post.css\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { db } from \"./firebase\";\nimport firebase from \"firebase\";\nexport default function Post({\n  user,\n  postId,\n  imageUrl,\n  username,\n  caption\n}) {\n  const [comments, setComments] = useState([]);\n  const [comment, setComment] = useState(\"\");\n  useEffect(() => {\n    let unsbscribe;\n\n    if (postId) {\n      unsbscribe = db.collection(\"posts\").doc(postId).collection(\"comments\").orderBy(\"timestamp\", \"desc\").onSnapshot(snapshot => {\n        setComments(snapshot.docs.map(doc => doc.data()));\n      });\n    }\n\n    return () => {\n      unsbscribe();\n    };\n  }, [postId]);\n\n  const postComment = e => {\n    e.preventDefault();\n    db.collection(\"posts\").doc(postId).collection(\"comments\").add({\n      text: comment,\n      username: user.displayName,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    });\n    setComment(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: \"post__avatar\",\n    alt: \"Anis\",\n    src: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, username)), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"post__image\",\n    src: imageUrl,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"post__text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, username), \" \", caption), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post__comments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, comments.map(comment => /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, comment.username), \" \", comment.text))), (user === null || user === void 0 ? void 0 : user.displayName) ? /*#__PURE__*/React.createElement(\"form\", {\n    className: \"post__commentBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"post__input\",\n    placeholder: \"Add a comment\",\n    value: comment,\n    onChange: e => setComment(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"post__button\",\n    disabled: !comment,\n    type: \"submit\",\n    onClick: postComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, \"Post\")) : null);\n}","map":{"version":3,"sources":["/Users/anismedini/Desktop/code-js/instagram-clone/src/Post.js"],"names":["React","useState","useEffect","Avatar","db","firebase","Post","user","postId","imageUrl","username","caption","comments","setComments","comment","setComment","unsbscribe","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","postComment","e","preventDefault","add","text","displayName","timestamp","firestore","FieldValue","serverTimestamp","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./Post.css\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { db } from \"./firebase\";\nimport firebase from \"firebase\";\n\nexport default function Post({ user, postId, imageUrl, username, caption }) {\n  const [comments, setComments] = useState([]);\n  const [comment, setComment] = useState(\"\");\n\n  useEffect(() => {\n    let unsbscribe;\n    if (postId) {\n      unsbscribe = db\n        .collection(\"posts\")\n        .doc(postId)\n        .collection(\"comments\")\n        .orderBy(\"timestamp\", \"desc\")\n        .onSnapshot((snapshot) => {\n          setComments(snapshot.docs.map((doc) => doc.data()));\n        });\n    }\n    return () => {\n      unsbscribe();\n    };\n  }, [postId]);\n  const postComment = (e) => {\n    e.preventDefault();\n    db.collection(\"posts\").doc(postId).collection(\"comments\").add({\n      text: comment,\n      username: user.displayName,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n    });\n    setComment(\"\");\n  };\n  return (\n    <div className=\"post\">\n      <div className=\"post__header\">\n        <Avatar className=\"post__avatar\" alt=\"Anis\" src=\"\" />\n        <h3>{username}</h3>\n      </div>\n      <img className=\"post__image\" src={imageUrl} alt=\"\" />\n      <h4 className=\"post__text\">\n        <strong>{username}</strong> {caption}\n      </h4>\n      <div className=\"post__comments\">\n        {comments.map((comment) => (\n          <p>\n            <strong>{comment.username}</strong> {comment.text}\n          </p>\n        ))}\n      </div>\n      {user?.displayName ? (\n        <form className=\"post__commentBox\">\n          <input\n            type=\"text\"\n            className=\"post__input\"\n            placeholder=\"Add a comment\"\n            value={comment}\n            onChange={(e) => setComment(e.target.value)}\n          />\n          <button\n            className=\"post__button\"\n            disabled={!comment}\n            type=\"submit\"\n            onClick={postComment}\n          >\n            Post\n          </button>\n        </form>\n      ) : null}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}