{"ast":null,"code":"var _jsxFileName = \"/Users/anismedini/Desktop/code-js/instagram-clone/src/ImageUpload.js\";\nimport React, { useState } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { storage, db } from \"./firebase\";\nexport default function ImageUpload() {\n  const [image, setImage] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [caption, setCaption] = useState(\"\");\n\n  const handleChange = e => {\n    if (e.target.files[0]) setImage(e.target.value[0]);\n  };\n\n  const handleUpload = () => {\n    const uploadTask = storage.ref(`images/${image.name}`).put(image);\n    uploadTask.on(\"state_changed\", snapshot => {\n      const progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n      setProgress(progress);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter a caption\",\n    value: caption,\n    onChange: event => setCaption(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, \"Upload\"));\n}","map":{"version":3,"sources":["/Users/anismedini/Desktop/code-js/instagram-clone/src/ImageUpload.js"],"names":["React","useState","Button","storage","db","ImageUpload","image","setImage","progress","setProgress","caption","setCaption","handleChange","e","target","files","value","handleUpload","uploadTask","ref","name","put","on","snapshot","Math","round","bytesTransferred","totalBytes","event"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,OAAT,EAAkBC,EAAlB,QAA4B,YAA5B;AAEA,eAAe,SAASC,WAAT,GAAuB;AACpC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMW,YAAY,GAAIC,CAAD,IAAO;AAC1B,QAAIA,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAJ,EAAuBR,QAAQ,CAACM,CAAC,CAACC,MAAF,CAASE,KAAT,CAAe,CAAf,CAAD,CAAR;AACxB,GAFD;;AAGA,QAAMC,YAAY,GAAG,MAAM;AACzB,UAAMC,UAAU,GAAGf,OAAO,CAACgB,GAAR,CAAa,UAASb,KAAK,CAACc,IAAK,EAAjC,EAAoCC,GAApC,CAAwCf,KAAxC,CAAnB;AACAY,IAAAA,UAAU,CAACI,EAAX,CAAc,eAAd,EAAgCC,QAAD,IAAc;AAC3C,YAAMf,QAAQ,GAAGgB,IAAI,CAACC,KAAL,CACdF,QAAQ,CAACG,gBAAT,GAA4BH,QAAQ,CAACI,UAAtC,GAAoD,GADrC,CAAjB;AAGAlB,MAAAA,WAAW,CAACD,QAAD,CAAX;AACD,KALD;AAMD,GARD;;AASA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,iBAFd;AAGE,IAAA,KAAK,EAAEE,OAHT;AAIE,IAAA,QAAQ,EAAGkB,KAAD,IAAWjB,UAAU,CAACiB,KAAK,CAACd,MAAN,CAAaE,KAAd,CAJjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,EAAEJ,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAQE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEK,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,CADF;AAYD","sourcesContent":["import React, { useState } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { storage, db } from \"./firebase\";\n\nexport default function ImageUpload() {\n  const [image, setImage] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [caption, setCaption] = useState(\"\");\n\n  const handleChange = (e) => {\n    if (e.target.files[0]) setImage(e.target.value[0]);\n  };\n  const handleUpload = () => {\n    const uploadTask = storage.ref(`images/${image.name}`).put(image);\n    uploadTask.on(\"state_changed\", (snapshot) => {\n      const progress = Math.round(\n        (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n      );\n      setProgress(progress);\n    });\n  };\n  return (\n    <div>\n      <input\n        type=\"text\"\n        placeholder=\"Enter a caption\"\n        value={caption}\n        onChange={(event) => setCaption(event.target.value)}\n      />\n      <input type=\"file\" onChange={handleChange} />\n      <Button onClick={handleUpload}>Upload</Button>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}